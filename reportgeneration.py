def generate_report(user, url, vulnerabilities):
    with open("report.html", "w") as report:
        report.write("""
        <html>
        <head>
            <title>Fuzzer Report</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 20px; padding: 20px; background-color: #f4f4f4; }
                h1 { color: #333; }
                h2 { color: #d9534f; }
                p { font-size: 16px; }
                table { width: 100%; border-collapse: collapse; margin-top: 20px; }
                th, td { border: 1px solid #ddd; padding: 10px; text-align: left; }
                th { background-color: #d9534f; color: white; }
                tr:nth-child(even) { background-color: #f9f9f9; }
                tr:hover { background-color: #f1c40f; }
                .solution { background-color: #5bc0de; padding: 15px; border-radius: 5px; color: white; }
            </style>
        </head>
        <body>
        """)

        report.write(f"<h1>Fuzzer Report for {url}</h1>")
        report.write(f"<p><b>Generated by:</b> {user}</p>")

        categories = {
            "SQL Injection": [],
            "Cross-Site Scripting (XSS)": [],
            "Command Injection": [],
            "Directory Traversal": [],
            "Broken Authentication": [],
            "Security Misconfiguration": [],
            "Sensitive Data Exposure": [],
            "Insecure File Upload": [],
            "Cross-Site Request Forgery (CSRF)": [],
            "IDOR": [],
            "Brute Force / Multiple Login Attempts": []
        }

        for vuln in vulnerabilities:
            if vuln["type"] in categories:
                categories[vuln["type"]].append(vuln)
            else:
                categories["Security Misconfiguration"].append(vuln)  # Default category

        if vulnerabilities:
            report.write("<h2>Vulnerabilities Found</h2>")

            for category, vulns in categories.items():
                if vulns:
                    report.write(f"<h3>{category}</h3>")
                    report.write("<table>")
                    report.write("<tr><th>Payload</th><th>Recommendation</th></tr>")
                    for vuln in vulns:
                        report.write(f"<tr><td>{vuln['payload']}</td><td>{vuln['recommendation']}</td></tr>")
                    report.write("</table>")

            # Solution Section
            report.write("""
            <h2>Solutions to Prevent These Vulnerabilities</h2>
            <div class='solution'>
                <ul>
                    <li><b>SQL Injection:</b> Use parameterized queries and prepared statements.</li>
                    <li><b>XSS:</b> Implement Content Security Policy (CSP) and sanitize user inputs.</li>
                    <li><b>Command Injection:</b> Validate user input and avoid executing system commands.</li>
                    <li><b>Directory Traversal:</b> Restrict file access and properly validate user input.</li>
                    <li><b>CSRF:</b> Implement CSRF tokens and set SameSite cookies.</li>
                    <li><b>IDOR:</b> Implement access controls to ensure users can only access resources they are authorized for. Validate all user-supplied input and ensure that IDs are properly authenticated and authorized.</li>
                    <li>Use Web Application Firewalls (WAF) to block attacks.</li>
                    <li>Regularly update and patch your web applications.</li>
                </ul>
            </div>
            """)

        else:
            report.write("<p>No vulnerabilities found.</p>")

        report.write("</body></html>")
